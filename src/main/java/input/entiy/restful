curl文档
一.ddl命令
1.创建和删除数据库
#语法
PUT          http://ip:端口/ dbname
DELETE  http://ip:端口/ dbname
#实例
PUT          http://ip:端口/ School
DELETE  http://ip:端口/ School
2.创建表(SQL字段类型   char(1字节)  double(8字节) N*string(4字节) int(4字节) long(8字节) long long(16字节))
#语法
POST    http://ip:端口/dbname/tabname/版本
{
   "columfamilys": [
 		             	     {
                                         "cfname": "列族名称 ",
 			                    "type": "类型",
			                  “min”：最小长度,
		              	         “max”：最大长度,
			                   “unique”:是否唯一,
                                                "Version": "版本",
                                     },
                                      ……
     ]
  }
#实例
POST     http://ip:端口/School/Student
{
   "columfamilys": [
 		             	     {
                                         "cfname": "StudentName ",
 			                    "type": "string",
			                  “min”：4,
		              	         “max”：50,
			                   “unique”:false,
                                               "Version": "1",
                                     },
                                      ……
     ]
  }
3.修改表(更新)
#语句
POST http://ip:端口/dbname/tabname/_alter
{
         "columfamilys": [
 			                {
“cfname”:“列族名称”
                                            "old-cfname":  "列族名称",
 			                   "method": "put/delete/insert",
 			},
          .......]
  }
#实例
POST http://ip:端口/School/Student/_alter
{
         "columfamilys": [
 			                {
                                             "cfname":  "StudentName",
 			                   "type": "Int", 			}
          .......,]
  }
4.删除表
#语句
DELETE http://ip:端口/dbname/tabname/9
#实例
DELETE http://ip:端口/ School/Student/9



二.dml命令

1.开启和关闭事务
#语法
POST     http://ip:端口/_open
{
   "value(操作解释)":  "xxxxxx",
}
POST     http://ip:端口/_close
#实例
POST      http://ip:端口/_open
{
   "value":  "更新School库",
}

2.版本合并
#语法
POST http://ip:端口/dbname/tabname/_merge
{
   "terms(条件)": [
            {
             “version-from”:"要合并版本"
       “version-to”:"合并后版本"
            },
           .......
         ]
}
#实例
POST http://ip:端口/School/Student/_merge
{
   "ranges": [
            {
             “version-from”:1
       “version-to”:3
            },
           .......
         ]
}

#语句
POST http://ip:端口/dbname/tabname/_use
{
 "version":"版本"
}
//没必要 url上可以指定版本，不写的话可以默认最新版本

post http://ip:端口/dbname/tabname/_showversion

#实例
//操作完成后默认更新为最新版本1…2…3(2)
POST http://ip:端口/School/Student/_use
{
"version":"2"
}
GET http://ip:端口/School/Student/_showversion



3.基本查询流程
#语法
post http://ip:端口/dbname/tabname/_search
{
“cfnames”:[rowkey,id,name,age]
   "terms(条件)": [
            {
               "cfname":"列族名称",
               "max": "最大值",
                "size": "大小",
              “min”:"最小值"
               "like": "模糊(%表示多个字符，_表示一个字符)",
             },
             {
               "cfname":"列族名称",
...
             },
             ……
          ]
“order”:"升序降序",

	“avg/min/max/sum(聚合)”: [
{colum:"StudentAge",
as:“xxx”
},.....
]


}
#实例
post http://ip:端口/School/Student/_search
{
“cfnames”:[rowkey,id,name,age]
   "terms": [
            {
               "cfname":"StudentAge",
               "max": "20",
              “min”:"10"
             },
             {
               "cfname":"StudentName",
               "like": "王%",
             },
             ……
          ]
“order”:"desc",
    “avg/min/max/sum(聚合)”: [
{colum:"StudentAge",
as:“xxx”
},.....
]

}

4.基本添加流程
#语法
PUT http://ip:端口/dbname/tabname
{
“rowkey”:"唯一标识",
“values”:[
    {
      “cf_name”:”cf1”,
      “c_name”:c1,
       “value”:”xxx”
     },
        ......
     ]
}
#实例
PUT http://ip:端口/School/Student
{
“rowkey”:"Test1",
“values”:[
    {
     “c_name”:"Name",
      “cf_name”:"StudentName",
       “value”:"王刚"
      },
        ......
     ]
}
5.基本删除流程
#语句
post http://ip:端口/dbname/tabname /_delete
{
“cfnames”:[rowkey,id,name,age]
    "terms": [
            {
               "cfname":"StudentAge",
               "max": "20",
              “min”:"10"
             },
             {
               "cfname":"StudentName",
               "like": "王%",
             },
             ……
          ]
}
#实例
post http://ip:端口/School/Student/_delete
{
“cfnames”:[rowkey,id,name,age]
  "terms": [
         {
             "cf_name":"Age",
“c_name”:"StudentAge",
             "max": "10",
             "min":"0",
         },
         {
             "cf_name":"Name",
 "c_name": "StudentName",
             “like”:”王%”
          },
             …
               ]
}

6.基本跟新流程
#语句
POST  http://ip:端口/dbname/tabname /_update
{
 "terms": [
         {
             "cf_name":"Age",
“c_name”:"StudentAge",
             "max": "10",
             "min":"0",
         },
         {
             "cf_name":"Name",
 "c_name": "StudentName",
             “like”:”王%”
          },
             …
               ]
"values": [
            {
                    “cf_name”:”cf1”,
                    “c_name”:c1,
  “value”:”xxx”
    },
        ......
          ]
 }
#实例
POST http://ip:端口/School/Student/_update
{
 "terms": [
           {
             "cf_name":"Address",
 	     "c_name":"StudentAddress",
             "like":"天津%"
            },
                .....
         ]

"params": [
            {
“cf_name”:"Address"，
                   “c_name”:"StudentAddress"，
  “value”:"天职师大"
    },
        ......
          ]
 }


7.高级查询(未完成)
post http://ip:端口/dbname/tabname /_mget
{

	jtables：[
		{
			tabname:xxxx，
			method:inner/left/right/full
		},
		......
	]
“cfnames”:[rowkey,id,name,age]
"terms": [
         {
             "cf_name":"Address",
 	     "c_name":"StudentAddress",
             "max": 10,
             "size": 10，
           “min”:0，
            “like”:”刘%_”，
           “tablename”: “xxxxx”
              },
             …
            ]
}
